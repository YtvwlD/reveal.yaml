{% macro render_subsequent_slide(slide) %}
<section>
{{ render_slide(slide) | indent(indentfirst=True) }}
</section>
{% endmacro %}

{% macro render_slide(slide) %}
{% if "md" in slide.keys() %}
{{ render_md(slide["md"]) | indent(indentfirst=True) }}
{% elif "text" in slide.keys() %}
{{ slide["text"] | indent(indentfirst=True) }}
{% elif "slides" in slide.keys() %}
{% for x in slide["slides"] %}
{{ render_subsequent_slide(x) | indent(indentfirst=True) }}
{% endfor %}
{% endif %}
{% endmacro %}

{% macro render_md(md_file) %}
{% set markdown = markdown.reset() %}
{% set md = codecs.open(path.join(folder, md_file), encoding="utf-8") %}
{{ markdown.convert(md.read()) }}
{% set md = md.close() %}
{% endmacro %}

<!doctype html>
<html>
    <head>
        <meta charset="utf-8">

        {% if subtitle %}
        <title>{{ title }} - {{ subtitle }}</title>
        <meta name="description" content="{{ subtitle }}">
        {% else %}
        <title>{{ title }}</title>
        {% endif %}

        {% if author %}
        <meta name="author" content="{{ author }}">
        {% endif %}

        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
        {% if js %}
        <link rel="stylesheet" href="reveal.js/css/reveal.css">
        <link rel="stylesheet" href="reveal.js/css/theme/{{ theme }}.css" id="theme">

        <!-- For syntax highlighting: TODO -->

        <!-- If the query includes 'print-pdf', include the PDF print sheet -->
        <script>
            if( window.location.search.match( /print-pdf/gi ) ) {
                var link = document.createElement( 'link' );
                link.rel = 'stylesheet';
                link.type = 'text/css';
                link.href = 'reveal.js/css/print/pdf.css';
                document.getElementsByTagName( 'head' )[0].appendChild( link );
            }
        </script>

        <!--[if lt IE 9]>
        <script src="reveal.js/lib/js/html5shiv.js"></script>
        <![endif]-->
        
        <script src="reveal.js/lib/js/head.min.js"></script>
        <script src="reveal.js/js/reveal.js"></script>
        {% endif %}
    </head>
    
    <body>
        <div class="reveal">
            <div class="slides">
                {% if prepend %}
                {{ render_slide(prepend) | indent(width=12, indentfirst=True) }}
                {% endif %}
                {{ render_slide({"slides": [
                        {"text": "<h1>{}</h1><br><h3>{}</h3>".format(title, subtitle)},
                        {"text": "<h1>Online</h1><br><pre>{}</pre><br><a href='./?p={}&get=zip'>Download</a>".format(url, pres)}
                    ]}) | indent(width=12, indentfirst=True) }}
                {{ render_slide(slides) | indent(width=12, indentfirst=True) }}
                {% if append %}
                {{ render_slide(append) | indent(width=12, indentfirst=True) }}
                {% endif %}
            </div>
        </div>
        {% if js %}
        <!-- TODO: Pull the configuration below from the YAML. -->
        <script>
            // Full list of configuration options available here:
            // https://github.com/hakimel/reveal.js#configuration
            Reveal.initialize({
                controls: {{ controls }},
                progress: {{ progress }},
                history: {{ history }},
                center: {{ center }},
                theme: "{{ theme }}",
                transition: "{{ transition}}",
                // Parallax scrolling
                // parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
                // parallaxBackgroundSize: '2100px 900px',

                // Optional libraries used to extend on reveal.js
                dependencies: [
                    { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                    { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() {return !!document.body.classList; } },
                    { src: 'reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
                ]
            });
        </script>
        {% endif %}
    </body>
</html>
